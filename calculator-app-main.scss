
@use './global/fontweightsizes' as fs;
@use './global/colors' as clr;
@use './global/flexgrid';



@mixin font-color($color, $fallback-color) {
  color: $fallback-color;
  color: $color;
}

@mixin bg-color($color, $fallback-color) {
  background-color: $fallback-color;
  background-color: $color;
}


@mixin border-radius($radius...) {
  border-radius: $radius;
}
@mixin margin($args...) {
  margin: $args;
}
@mixin padding($args...) {
  padding: $args;
}


//complexity 1
html{
  box-sizing: border-box; 
}
*,
::before,
::after {
  box-sizing: inherit;
}
body{
   overflow: auto;
   color: white;
   background-color:  hsl(222, 26%, 31%);
}
fieldset {
  margin-inline: 0.125em;
  border: none;
  padding-block: 0;
  padding-inline: 0;
  min-inline-size: 1em;
}
legend {
  display: contents;
}
form{
   height: 100vh;
}
table{
      width: 10em;
      max-width: 30em;

}

button{
   width: 2.7em;
   height: 1.8em;
   max-width: 9em;
   max-height: 6em;
   border-radius: 1.25em;
   border:none;
   @include bg-color(lighten(map-get(clr.$theme1-colors,key-shadow3),5),nth(clr.$theme1-fallback-colors,9));
   box-shadow: 0 0.375em 0.125em -0.125em map-get(clr.$theme1-colors,key-shadow1);
}


.gray-border{ 
   border: 0.125em solid gray;
}
.padding2em{
   @include padding(2em);
}

.margin-top-10-em{
   margin-top: 10em;
}

.toggle__slider{
   @include bg-color(map-get(clr.$theme1-colors,key-background2),nth(clr.$theme1-fallback-colors,6));
    position:absolute;
    width: 2.5em;
   height: 2.5em;
   left:0;
   border-radius: 50%;
   transition: all 0.8s ease-out;
}
@media (prefers-reduced-motion: reduce) {
   .toggle__slider {
         transition: all 1s ease-in-out;
   }
 }
.keypad{
   box-shadow: 0 0.25em 0.125em -0.125em map-get(clr.$theme1-colors,key-shadow3);
}
.keypad,.keypad-rest {
   border-radius: 0.9375em;
   background-color:  hsl(223, 31%, 20%);
   @include font-color(map-get(clr.$theme1-colors,text),nth(clr.$theme1-fallback-colors,10));
}
.keypad-rest{
      padding-bottom:3em;
      padding-top: 3em;
      margin-bottom:3em;
 }
.white-font{
   @include font-color(map-get(clr.$theme1-colors,white),nth(clr.$theme1-fallback-colors,11));
}
.reset,.del{
   @include bg-color(map-get(clr.$theme1-colors,key-background1),nth(clr.$theme1-fallback-colors,3));
}
.reset{
   box-shadow: 0 0.25em 0.125em -0.125em map-get(clr.$theme1-colors,key-shadow1);
}
.is{
   box-shadow: 0 0.375em 0.125em -0.125em map-get(clr.$theme1-colors,key-shadow2);
   @include bg-color(map-get(clr.$theme1-colors,key-background2),nth(clr.$theme1-fallback-colors,4));
}
.output-parent{
   @include bg-color(map-get(clr.$theme1-colors,toggle-keypad-background),nth(clr.$theme1-fallback-colors,2));
   margin-bottom: 1em;
   padding: 0.4em;
   border-radius: 0.9375em;
}

.font-bold{
   font-weight:fs.$font_weight-bold;
}

.calculator-container{
   margin-top: 3em;
}
      
.font-size-3-em{
   font-size:3em;
}
header{
   padding: 0 1.5em;
}
.toggle__wrapper{
   position:relative;
}
        
.input-outer{
   max-width: 40em;
   max-height: 30em;
}

.output{
   padding: 0.5em 0.5em;
}
.uppercase{
   text-transform: uppercase;
}
.font-size-2-4em{
   font-size: 2.4em;
   max-width: 3em;
   max-height: 2em;
}

.attribution{
   margin: 25em auto;
   text-align:center;
   padding:1em;
   color:#ffffff;
}

.keypad,.keypad-rest{
   @include bg-color(map-get(clr.$theme1-colors,toggle-keypad-background),nth(clr.$theme1-fallback-colors,2));
}



//complexity 2
button.double-width{
   width: 6.5em;
   max-width: 17em;
}
button{
    &:hover{
      @include bg-color(lighten(map-get(clr.$theme1-colors,White),5),nth(clr.$theme1-fallback-colors,11));
   }
}
.reset,.del{
   &:hover{
      background-color: clr.$hover-reset-del-theme-1-color;
   }
}
.is{
   &:hover{
      background-color: clr.$hover-is-theme-1color;
   }
}


//complextiy 3 
.theme2 {
      @include bg-color(map-get(clr.$theme2-colors,main-background),nth(clr.$theme2-fallback-colors,1));
      @include font-color(map-get(clr.$theme2-colors,white),nth(clr.$theme2-fallback-colors,10));
      .keypad,.keypad-rest{
         @include bg-color(map-get(clr.$theme2-colors,toggle-keypad-background),nth(clr.$theme2-fallback-colors,2));
      }
      .toggle__slider{
         @include bg-color(map-get(clr.$theme2-colors,key-background2),nth(clr.$theme2-fallback-colors,6));
      }
      
      .keypad,.keypad-rest{
         @include bg-color(map-get(clr.$theme2-colors,key-background3),nth(clr.$theme2-fallback-colors,8));
         @include font-color(map-get(clr.$theme2-colors,text),nth(clr.$theme2-fallback-colors,10));
      }
      .keypad{
         box-shadow: 0 0.375em 0.25em -0.125em map-get(clr.$theme2-colors,key-shadow3);
      }
       button{
         box-shadow: 0 0.375em 0.125em -0.125em map-get(clr.$theme2-colors,key-shadow);
      }
      .double-width{
         box-shadow: 0 0.25em 0.125em -0.125em map-get(clr.$theme2-colors,key-shadow2);
      }
      .del,.reset{
         @include bg-color(map-get(clr.$theme2-colors,key-background1),nth(clr.$theme2-fallback-colors,3));
      }
      .reset{
         box-shadow: 0 0.25em 0.125em -0.125em map-get(clr.$theme2-colors,key-shadow1);
      }
      .is{
          @include bg-color(map-get(clr.$theme2-colors,key-background2),nth(clr.$theme2-fallback-colors,6));
          box-shadow: 0 0.375em 0.125em -0.125em map-get(clr.$theme2-colors,key-shadow2);
      }
      .output-parent{
         @include bg-color(map-get(clr.$theme2-colors,toggle-keypad-background),nth(clr.$theme2-fallback-colors,2));
      }
}
.theme3{
   @include bg-color(map-get(clr.$theme3-colors,main-background),nth(clr.$theme3-fallback-colors,1));
   @include font-color(map-get(clr.$theme3-colors,text1),nth(clr.$theme3-fallback-colors,9));
   .keypad,.keypad-rest{
      @include bg-color(map-get(clr.$theme3-colors,toggle-screen-keypad-background),nth(clr.$theme3-fallback-colors,2));
   }
   .toggle__slider{
      @include bg-color(map-get(clr.$theme3-colors,key-background2),nth(clr.$theme3-fallback-colors,6));
   }
   .keypad,.keypad-rest{
       @include bg-color(map-get(clr.$theme3-colors,main-background),nth(clr.$theme3-fallback-colors,1));
      @include font-color(map-get(clr.$theme3-colors,text1),nth(clr.$theme3-fallback-colors,9));
   }
   .keypad{
      box-shadow: 0 0.25em 0.125em -0.125em map-get(clr.$theme3-colors,key-shadow3);
   }
   button{
      @include bg-color(map-get(clr.$theme3-colors,key-background3),nth(clr.$theme3-fallback-colors,3));
      box-shadow: 0 0.375em 0.125em -0.125em map-get(clr.$theme3-colors,key-shadow1);
   }
   .del,.reset{
      @include bg-color(map-get(clr.$theme3-colors,key-shadow1),nth(clr.$theme3-fallback-colors,4));
   }
   .is{
      @include bg-color(map-get(clr.$theme3-colors,key-background2),nth(clr.$theme1-fallback-colors,4));
   }
   .output-parent{
      @include bg-color(map-get(clr.$theme3-colors,toggle-screen-keypad-background),nth(clr.$theme3-fallback-colors,2));
   }
}

input[type="radio"]{
   width: 2.5em;
   height: 2.5em;
   opacity: 0 ;
}

.three-toggle-switch .toggle{
   position:relative;
   width:fit-content;
   height:4em;
   border-radius: 2.1875em;
}
.three-toggle-switch .toggle{
   @include bg-color(map-get(clr.$theme1-colors,toggle-keypad-background),nth(clr.$theme1-fallback-colors,2));
}



//complexity 4
.theme2{
   button{
       &:hover{
         @include bg-color(lighten(map-get(clr.$theme2-colors,key-background3),9),nth(clr.$theme2-fallback-colors,8));
       }
   }
   .del,.reset{
         &:hover{
            background-color: clr.$hover-reset-del-theme-2-color;
         }
   }
   .is{
         &:hover{
            background-color: clr.$hover-is-theme-2color;
         }
      }
}
.theme3{
     button{
         &:hover{
            @include bg-color(map-get(clr.$theme3-colors,key-shadow1),nth(clr.$theme3-fallback-colors,4));
         }
     }
   .del,.reset{
      &:hover{
            background-color: clr.$hover-reset-del-theme-3-color;
      }
   }
   .is{
      &:hover{
         background-color: clr.$hover-is-theme-3color;
      }
   }
}
/*User toggles the toggle button , check if theme1 is selected..., if it is , toggle button should be left aligned with left:0*/
   input:checked ~ .toggle__slider {
      left: 0;
   }
   /*User toggles the toggle button (check if theme2 is selected, if it is, toggle button should be left aligned with left:3em*/
   .theme-2:checked ~ .toggle__slider{
         left:3em;
    }
   /*User toggles the toggle button (check if theme3 is selected, if it is, toggle button should be left aligned with left:6em*/
   .theme-3:checked ~ .toggle__slider{
         left:6em;
   }


//complexity 5  
.theme2{
   .three-toggle-switch .toggle{
       @include bg-color(map-get(clr.$theme2-colors,toggle-keypad-background),nth(clr.$theme2-fallback-colors,2));
   }
}
.theme3{
   .three-toggle-switch .toggle{
       @include bg-color(map-get(clr.$theme3-colors,toggle-screen-keypad-background),nth(clr.$theme3-fallback-colors,2));
   }
}

   //taken from https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html
.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0); 
  clip-path: inset(50%);
  height: 0.0625em;
  overflow: hidden;
  position: absolute;
  white-space: nowrap; 
  width: 0.0625em;
}

//complexity 6
input[type="radio"]{
   &:focus ~ .toggle__slider {
      cursor:pointer;
   }
}